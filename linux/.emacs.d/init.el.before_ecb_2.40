;;; The Package Manager
;; this is most important addition to emacs24
;; M-x list-packages to view available packages
;; i to mark to install ;; d to mark to delete
;; x to execute those actions
(require 'package)
(setq package-archives
'(("gnu" . "http://elpa.gnu.org/packages/")
("marmalade" . "http://marmalade-repo.org/packages/")))
(package-initialize)

;;; Making things pretty
(setq inhibit-splash-screen t) ; turn off splash screen
(setq backup-directory-alist (quote ((".*" . "~/.emacs_backups/")))) ;; stop pesky ~ files from littering

;; To change the font
;; (set-frame-font "Font Name 16")
(set-face-attribute 'default nil :height 105)

;; To load a theme
;; (load-theme 'theme-name)

;; disable pesky menus and scroll bars (uncomment to unclutter)
;; (menu-bar-mode -1)
(tool-bar-mode -1)
;; (scroll-bar-mode -1)
;; prevent the whole window from flashing on bell
(when (equal system-type 'darwin)
(setq ring-bell-function #'ignore
visible-bell nil))

;; normal "paste override selection" logic
(delete-selection-mode 1)

(setq-default indent-tabs-mode nil) ; turn off tabs, use spaces instead
(column-number-mode t) ; shows column number next to line number

;; shows column number next to line number
(column-number-mode t)

;; show line numbers
(global-linum-mode t)

;; delete trailing whitespace automatically
(add-hook 'before-save-hook 'delete-trailing-whitespace)

;;; Loading Code
;; add common directories for extensions to the load-path
;; so they can be require'd
(mapc (apply-partially #'add-to-list 'load-path)
'("~/.emacs.d/lisp"
"~/.emacs.d/site-lisp"
"~/.emacs.d/site-lisp/ecb"
"~/.emacs.d/themes"))

(require 'revbufs)

;;; Language Modes
;; Set ruby mode for some extra extensions that aren't on by default in Emacs 24:
(add-to-list 'auto-mode-alist (cons "\.rake$" 'ruby-mode))
(add-to-list 'auto-mode-alist (cons "Gemfile$" 'ruby-mode))

;;
;; Ruby code browser
;;
(require 'ecb-autoloads)

;;
;; Keyboard macros
;;
(fset 'previous-window-ki
      "\C-[-1\C-xo")
(global-set-key "\C-xp" 'previous-window-ki)

(global-set-key '[\S-f12] 'revert-buffer)
(global-set-key '[f12] 'revert-buffer)

;; Goto-line short-cut key
(global-set-key '[f11] 'goto-line)

;; F3 - Insert [current_file] into minibuffer
(define-key minibuffer-local-map [f3]
  (lambda () (interactive)
     (insert (buffer-name (window-buffer (minibuffer-selected-window))))))

;; scroll line by line
(global-set-key (quote [M-down]) (quote scroll-up-line))
(global-set-key (quote [M-up]) (quote scroll-down-line))

;;; Customizations
;; Don't edit this section by hand, instead call M-x customize or
;; customize-group and use the menus.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(uniquify-buffer-name-style (quote post-forward) nil (uniquify))
 '(visible-bell t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
